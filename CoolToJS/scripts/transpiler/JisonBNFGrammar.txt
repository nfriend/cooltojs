// used by Jison to generate the SLR(1) parse table
// http://zaach.github.io/jison/try/usf/

%token ClassKeyword ElseKeyword FalseKeyword FiKeyword IfKeyword InheritsKeyword
%token IsvoidKeyword LetKeyword LoopKeyword PoolKeyword ThenKeyword WhileKeyword 
%token CaseKeyword EsacKeyword NewKeyword OfKeyword NotKeyword TrueKeyword 

%token Integer String ObjectIdentifier TypeIdentifier

%left '<-'
%left NotKeyword
%left '<=' '<' '='
%left '+' '-'
%left '*' '/'
%left IsvoidKeyword
%left '~'
%left '@'
%left '.'

%start Program

%%

Program
	: Class ';'
	| Class ';' Program
	;

FeatureList
	: Feature ';'
	| Feature ';' FeatureList
	;

Class
	: ClassKeyword TypeIdentifier InheritsKeyword TypeIdentifier '{' FeatureList '}'
	| ClassKeyword TypeIdentifier InheritsKeyword TypeIdentifier '{' '}'
	| ClassKeyword TypeIdentifier '{' FeatureList '}'
	;

FormalList
	: Formal
	| Formal ',' FormalList
	;

Feature
	: ObjectIdentifier '(' FormalList ')' ':' TypeIdentifier '{' Expression '}'
	| ObjectIdentifier '(' ')' ':' TypeIdentifier '{' Expression '}'
	| ObjectIdentifier ':' TypeIdentifier '<-' Expression
	| ObjectIdentifier ':' TypeIdentifier
	;

Formal
	: ObjectIdentifier ':' TypeIdentifier
	;

ExpressionList
	: Expression
	| Expression ',' ExpressionList
	;

ExpressionSeries
	: Expression ';'
	| Expression ';' ExpressionSeries
	;

LocalVariableDeclarationList
	: ObjectIdentifier ':' TypeIdentifier
	| ObjectIdentifier ':' TypeIdentifier '<-' Expression
	| ObjectIdentifier ':' TypeIdentifier ',' LocalVariableDeclarationList
	;

CaseOption
	: ObjectIdentifier ':' TypeIdentifier '=>' Expression ';'
	| ObjectIdentifier ':' TypeIdentifier '=>' Expression ';' CaseOption
	;

Expression
	: ObjectIdentifier '<-' Expression
	| Expression '.' '(' ExpressionList ')'
	| Expression '@' TypeIdentifier '.' '(' ExpressionList ')'
	| ObjectIdentifier '(' ')'
	| ObjectIdentifier '(' ExpressionList ')'
	| IfKeyword Expression ThenKeyword Expression ElseKeyword Expression FiKeyword
	| WhileKeyword Expression LoopKeyword Expression PoolKeyword
	| '{' ExpressionSeries '}'
	| LetKeyword LocalVariableDeclaration InKeyword Expression
	| CaseKeyword Expression OfKeyword CaseOption EsacKeyword
	| NewKeyword TypeIdentifier
	| IsvoidKeyword Expression
	| Expression '+' Expression
	| Expression '-' Expression
	| Expression '*' Expression
	| Expression '/' Expression
	| Expression '~' Expression
	| Expression '<' Expression
	| Expression '<=' Expression
	| Expression '=' Expression
	| NotKeyword Expression
	| '(' Expression ')'
	| ObjectIdentifier
	| Integer
	| String
	| TrueKeyword
	| FalseKeyword
	;
